version: "3"
services:
  nginx:
    image: nginx:stable-alpine
    ports:
      - 8080:80
    links:
      - frontend1
      - frontend2
    volumes:
      - "./nginx/nginx.conf:/etc/nginx/nginx.conf:ro"
      - "./data/nginx:/var/log/nginx"
  frontend1:
    build: ./frontend
    volumes:
      - ./frontend:/go/src/github.com/patnaikshekhar/battleship/frontend
    ports:
      - 3000
    environment:
      PORT: 8080
      DATABASE_URL: "postgres://battleship:password@db/battleship?sslmode=disable"
      CACHE_URL: "cache:6379"
    links:
      - db
      - cache
      - kafka
  frontend2:
    build: ./frontend
    volumes:
      - ./frontend:/go/src/github.com/patnaikshekhar/battleship/frontend
    ports:
      - 3000
    environment:
      PORT: 8080
      DATABASE_URL: "postgres://battleship:password@db/battleship?sslmode=disable"
      CACHE_URL: "cache:6379"
    links:
      - db
      - cache
      - kafka
  db:
    image: postgres
    restart: always
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
      - ./postgres:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_DB: battleship
      POSTGRES_USER: battleship
      POSTGRES_PASSWORD: password
  cache:
    image: redis:alpine
    restart: always
    volumes:
      - ./data/redis:/data
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: 192.168.1.102
      KAFKA_CREATE_TOPICS: "gameUpdates:1:1"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    links:
      - zookeeper:zookeeper
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      